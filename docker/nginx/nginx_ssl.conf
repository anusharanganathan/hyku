upstream rails_app {
  server web:3000;
}


server {
  listen       80;


  location ~ /\.well-known {
    root  /data/letsencrypt/;
    allow all;
  }


  location / {
    # rewrite ^ https://$host$request_uri? permanent;
    return 301 https://$host$request_uri;
  }
}


server {
  listen      443;
  listen [::]:443;
  server_name               $DOMAIN @rails_app;

  ssl                       on;
  add_header                Strict-Transport-Security "max-age=31536000" always;
  ssl_session_cache         shared:SSL:20m;
  ssl_session_timeout       10m;
  ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";
  ssl_stapling              on;
  ssl_stapling_verify       on;
  resolver                  8.8.8.8 8.8.4.4;
  ssl_certificate           /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
  ssl_certificate_key       /etc/letsencrypt/live/$DOMAIN/privkey.pem;
  ssl_trusted_certificate   /etc/letsencrypt/live/$DOMAIN/chain.pem;

  proxy_buffers             64 16k;
  proxy_max_temp_file_size  1024m;
  proxy_connect_timeout     5s;
  proxy_send_timeout        10s;
  proxy_read_timeout        10s;

  # access_log                /dev/stdout;
  # error_log                 /dev/stderr info;
  access_log /var/log/nginx.access.log;
  error_log /var/log/nginx.error.log;


  # serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
    try_files $uri @rails_app;
    access_log off;
    gzip_static on;
    # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }


  location / {
    try_files $uri $uri/ @rails_app;
  }


#  location @rails_app/users/auth/shibboleth {
#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    proxy_set_header Host $http_host;
#    proxy_set_header X-Real-IP $remote_addr;
#    proxy_set_header X-Forwarded-Proto $scheme;
#    proxy_redirect off;
#    include shib_clear_headers;
#    more_clear_input_headers 'displayName' 'mail' 'persistent-id';
#    shib_request /shibauthorizer;
#    shib_request_use_headers on;
#    proxy_pass http://rails_app;
#  }


  location @rails_app {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
    include shib_clear_headers;
    # more_clear_input_headers 'displayName' 'mail' 'persistent-id';
    shib_request /shibauthorizer;
    shib_request_use_headers on;
    proxy_pass http://rails_app;
    # limit_req zone=one;
    access_log /var/log/nginx.access.log;
    error_log /var/log/nginx.error.log;
  }


  # FastCGI authorizer for Auth Request module
  location = /shibauthorizer {
    internal;
    include fastcgi_params;
    fastcgi_pass unix:/run/shibboleth/shibauthorizer.sock;
  }


  # FastCGI responder
  location /Shibboleth.sso {
    include fastcgi_params;
    fastcgi_pass unix:/run/shibboleth/shibresponder.sock;
  }


  # Resources for the Shibboleth error pages. This can be customised.
  location /shibboleth-sp {
    alias /usr/share/shibboleth/;
  }
}
